# Generated by Django 4.2.21 on 2025-05-23 11:13

from decimal import Decimal
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='WalletTopUp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('payment_method', models.CharField(choices=[('imps', 'IMPS'), ('neft', 'NEFT'), ('cash', 'Cash'), ('cheque', 'Cheque'), ('others', 'Others')], max_length=20)),
                ('reference_number', models.CharField(blank=True, max_length=50, null=True)),
                ('remarks', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('topped_up_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='performed_topups', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallet_topups', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Wallet',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('action', models.CharField(choices=[('credit', 'Credit'), ('debit', 'Debit')], max_length=10)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('reference', models.CharField(choices=[('expense', 'Expense'), ('voucher', 'Voucher'), ('topup', 'Top-up'), ('adjustment', 'Adjustment')], max_length=20)),
                ('reference_id', models.CharField(blank=True, max_length=50, null=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('balance_after', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approved_wallet_transactions', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wallet_transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-date'],
            },
        ),
        migrations.CreateModel(
            name='TallyLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('entry_type', models.CharField(choices=[('expense', 'Port Expense'), ('voucher', 'Digital Voucher'), ('revenue', 'Revenue Entry'), ('manual', 'Manual Entry')], max_length=20)),
                ('reference_id', models.CharField(max_length=50)),
                ('tally_voucher_number', models.CharField(max_length=50)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('description', models.TextField()),
                ('logged_at', models.DateTimeField(auto_now_add=True)),
                ('logged_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tally_logs', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-logged_at'],
            },
        ),
        migrations.CreateModel(
            name='PortExpense',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField()),
                ('vehicle', models.CharField(max_length=50)),
                ('vehicle_number', models.CharField(max_length=20)),
                ('gate_no', models.CharField(choices=[('gate_1', 'Gate 1'), ('gate_2', 'Gate 2'), ('gate_3', 'Gate 3'), ('main_gate', 'Main Gate')], max_length=20)),
                ('description', models.TextField()),
                ('cisf_amount', models.DecimalField(decimal_places=2, default=Decimal('50.00'), max_digits=10)),
                ('kpt_amount', models.DecimalField(decimal_places=2, default=Decimal('100.00'), max_digits=10)),
                ('customs_amount', models.DecimalField(decimal_places=2, default=Decimal('75.00'), max_digits=10)),
                ('road_tax_days', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1)])),
                ('road_tax_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('other_charges', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10)),
                ('total_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('photo', models.ImageField(blank=True, null=True, upload_to='expense_photos/')),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('finalized', 'Finalized')], default='submitted', max_length=20)),
                ('review_comments', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approved_expenses', to=settings.AUTH_USER_MODEL)),
                ('reviewed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviewed_expenses', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submitted_expenses', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DigitalVoucher',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_time', models.DateTimeField()),
                ('expense_category', models.CharField(choices=[('fuel', 'Fuel'), ('maintenance', 'Maintenance'), ('office_supplies', 'Office Supplies'), ('travel', 'Travel'), ('meals', 'Meals'), ('communication', 'Communication'), ('utilities', 'Utilities'), ('professional_services', 'Professional Services'), ('others', 'Others')], max_length=30)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('bill_photo', models.ImageField(upload_to='voucher_photos/')),
                ('remarks', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('submitted', 'Submitted'), ('approved', 'Approved'), ('declined', 'Declined'), ('logged', 'Logged to Tally')], default='submitted', max_length=20)),
                ('approval_comments', models.TextField(blank=True, null=True)),
                ('tally_reference', models.CharField(blank=True, max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('approved_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='approved_vouchers', to=settings.AUTH_USER_MODEL)),
                ('logged_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='logged_vouchers', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='submitted_vouchers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
    ]
