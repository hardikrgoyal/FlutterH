# Generated by Django 4.2.21 on 2025-05-25 19:12

from django.db import migrations, models
import django.db.models.deletion


def link_labour_costs_to_contractors(apps, schema_editor):
    """
    Link existing LabourCost records to ContractorMaster records
    """
    LabourCost = apps.get_model('operations', 'LabourCost')
    ContractorMaster = apps.get_model('operations', 'ContractorMaster')
    
    for labour_cost in LabourCost.objects.all():
        if labour_cost.contractor_name:
            try:
                contractor = ContractorMaster.objects.get(name=labour_cost.contractor_name.strip())
                labour_cost.contractor_temp = contractor
                labour_cost.save()
            except ContractorMaster.DoesNotExist:
                # If contractor doesn't exist, create it
                User = apps.get_model('authentication', 'User')
                admin_user = User.objects.filter(role='admin').first()
                if not admin_user:
                    admin_user = User.objects.first()
                
                if admin_user:
                    contractor = ContractorMaster.objects.create(
                        name=labour_cost.contractor_name.strip(),
                        created_by=admin_user,
                        is_active=True
                    )
                    labour_cost.contractor_temp = contractor
                    labour_cost.save()


def reverse_link_labour_costs(apps, schema_editor):
    """
    Reverse migration - clear contractor_temp field
    """
    LabourCost = apps.get_model('operations', 'LabourCost')
    LabourCost.objects.update(contractor_temp=None)


class Migration(migrations.Migration):

    dependencies = [
        ('operations', '0003_create_contractor_master'),
    ]

    operations = [
        # Add temporary contractor field
        migrations.AddField(
            model_name='labourcost',
            name='contractor_temp',
            field=models.ForeignKey(null=True, blank=True, on_delete=django.db.models.deletion.CASCADE, to='operations.contractormaster'),
        ),
        # Link existing data
        migrations.RunPython(link_labour_costs_to_contractors, reverse_link_labour_costs),
        # Remove old contractor_name field
        migrations.RemoveField(
            model_name='labourcost',
            name='contractor_name',
        ),
        # Rename contractor_temp to contractor
        migrations.RenameField(
            model_name='labourcost',
            old_name='contractor_temp',
            new_name='contractor',
        ),
        # Make contractor field non-nullable
        migrations.AlterField(
            model_name='labourcost',
            name='contractor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='operations.contractormaster'),
        ),
    ]
