# Generated by Django 5.2.1 on 2025-09-27 11:03

from django.db import migrations


def migrate_vendor_references(apps, schema_editor):
    """
    Update PurchaseOrder and WorkOrder vendor references to use new vendor tables
    """
    Vendor = apps.get_model('operations', 'Vendor')
    POVendor = apps.get_model('operations', 'POVendor')
    WOVendor = apps.get_model('operations', 'WOVendor')
    PurchaseOrder = apps.get_model('operations', 'PurchaseOrder')
    WorkOrder = apps.get_model('operations', 'WorkOrder')
    
    # Update PurchaseOrder vendor references
    for po in PurchaseOrder.objects.all():
        if po.vendor:
            # Find the corresponding POVendor
            try:
                po_vendor = POVendor.objects.get(name=po.vendor.name)
                po.vendor = po_vendor
                po.save()
            except POVendor.DoesNotExist:
                print(f'POVendor not found for PurchaseOrder {po.id}')
    
    # Update WorkOrder vendor references
    for wo in WorkOrder.objects.all():
        if wo.vendor:
            # Find the corresponding WOVendor
            try:
                wo_vendor = WOVendor.objects.get(name=wo.vendor.name)
                wo.vendor = wo_vendor
                wo.save()
            except WOVendor.DoesNotExist:
                print(f'WOVendor not found for WorkOrder {wo.id}')


def reverse_migrate_vendor_references(apps, schema_editor):
    """
    Reverse migration - not implemented as we're keeping the new structure
    """
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('operations', '0029_update_vendor_foreign_keys'),
    ]

    operations = [
        migrations.RunPython(migrate_vendor_references, reverse_migrate_vendor_references),
    ]
