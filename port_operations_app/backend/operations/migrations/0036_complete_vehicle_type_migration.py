# Generated by Django migration

from django.db import migrations, models
import django.db.models.deletion


def link_vehicle_types_to_list_items(apps, schema_editor):
    """
    Link VehicleType records to their corresponding ListItemMaster records
    """
    VehicleType = apps.get_model('operations', 'VehicleType')
    ListItemMaster = apps.get_model('operations', 'ListItemMaster')
    
    for vehicle_type in VehicleType.objects.all():
        if vehicle_type.migrated_list_item_id:
            try:
                list_item = ListItemMaster.objects.get(id=vehicle_type.migrated_list_item_id)
                vehicle_type.list_item = list_item
                vehicle_type.save()
            except ListItemMaster.DoesNotExist:
                print(f"Warning: Could not find list item for vehicle type {vehicle_type.name}")


def reverse_link_vehicle_types(apps, schema_editor):
    """
    Reverse the linking
    """
    VehicleType = apps.get_model('operations', 'VehicleType')
    
    for vehicle_type in VehicleType.objects.all():
        vehicle_type.list_item = None
        vehicle_type.save()


class Migration(migrations.Migration):

    dependencies = [
        ('operations', '0035_migrate_vehicle_types_to_master_data'),
    ]

    operations = [
        # Link VehicleType records to ListItemMaster
        migrations.RunPython(
            link_vehicle_types_to_list_items,
            reverse_link_vehicle_types,
        ),
        
        # Remove the temporary field
        migrations.RemoveField(
            model_name='vehicletype',
            name='migrated_list_item_id',
        ),
        
        # Make list_item field required (after data is migrated)
        migrations.AlterField(
            model_name='vehicletype',
            name='list_item',
            field=models.OneToOneField(
                'operations.ListItemMaster',
                on_delete=models.CASCADE,
                help_text='Reference to master data list item'
            ),
        ),
    ] 